@model e_commerce.Models.ViewModel.ProductIndexViewModel
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @(string.IsNullOrWhiteSpace(Model.Search)? "Showing all": "You search for" +
        Model.Search + "found")+ @Model.Products.TotalItemCount Products
</p>

<p>
    @Html.ActionLink("Create New", "Create")
    @using (Html.BeginForm("Index", "Products", FormMethod.Get))
    {
        <label>Filter by category</label>
        @Html.DropDownListFor(x=>x.Category,Model.CatFilterItems, "All")
        <label>Sorted by :</label>
        @Html.DropDownListFor(x=> x.SortBy, new SelectList(Model.Sort, "Value", "Key"), "Default")
        <button type="submit">Filter</button>
        <input type="hidden" name=@nameof(Model.Search) value="@Model.Search" />
    }
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Category)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Products.First().Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Products.First().Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Products.First().Price)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model.Products) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Category.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Price)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ID })
        </td>
    </tr>
}
</table>
<div>
    Page @(Model.Products.PageCount < Model.Products.PageNumber? 0 :
        Model.Products.PageNumber) of @Model.Products.PageCount
    @Html.PagedListPager(Model.Products, page=> Url.Action("Index",
    new
    {
        Model.Category,
        Model.Search,
        Model.SortBy,
        page
    }))
</div>
